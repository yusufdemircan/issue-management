{"version":3,"file":"progressbar.component.d.ts","sources":["progressbar.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ProgressbarConfig } from './progressbar.config';\nimport { ProgressbarType } from './progressbar-type.interface';\nimport { BarComponent } from './bar.component';\nexport declare class ProgressbarComponent {\n    /** if `true` changing value of progress bar will be animated */\n    set animate(value: boolean);\n    /** If `true`, striped classes are applied */\n    set striped(value: boolean);\n    /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */\n    type: ProgressbarType;\n    /** current value of progress bar. Could be a number or array of objects\n     * like {\"value\":15,\"type\":\"info\",\"label\":\"15 %\"}\n     */\n    set value(value: number | any[]);\n    isStacked: boolean;\n    _striped: boolean;\n    _animate: boolean;\n    _value: number | any[];\n    get isBs3(): boolean;\n    /** maximum total value of progress element */\n    get max(): number;\n    set max(v: number);\n    addClass: boolean;\n    bars: BarComponent[];\n    protected _max: number;\n    constructor(config: ProgressbarConfig);\n    addBar(bar: BarComponent): void;\n    removeBar(bar: BarComponent): void;\n}\n"]}